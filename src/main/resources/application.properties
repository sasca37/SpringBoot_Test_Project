
# 해당 값이 존재해야 DB로 들어오는 데이터 정보를 읽어서 작업 분배를 한다.
#mcp.master=true
# 시작시 스케쥴 정보 삭제
#mcp.clear=true
# DB에서 읽을 것인지 api를 사용할것인지
#mcp.quartz-db=true
# L4가 있다면 해당 경로에 작업을 보내야된다.
mcp.loadbalance-path=192.168.0.73:8010/MagicScheduler
# 단일 모드 사용 여부
mcp.single=true

# mts
mcp.mts-path=C:/MCP/MCPServer/documents/mts_
mcp.mts-result-path=C:/MCP/MCPServer/documents/result
# INSURANCE_TYPE_KEY
mcp.insurance-type-key=insurance.type
mcp.insurance-type=LI
mcp.magicterms-document-key=magicterms.document.type
mcp.magicterms-document-type=MR
mcp.thread-size=4




spring.servlet.multipart.maxFileSize=1024MB
spring.servlet.multipart.maxRequestSize=1024MB
mybatis.mapper-locations=mapper/*.xml
mybatis.type-aliases-package=com.mainline.magic.scheduler.dto

#============================================================================
# DataSource
#============================================================================

#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@172.23.236.173:1521/xe
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@112.222.21.245:1521/xe
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@112.222.21.245:1521/xe
#spring.datasource.username=kdw
#spring.datasource.password=rlaehddn1
spring.datasource.username=mcpweb
spring.datasource.password=mcpweb



spring.quartz.job-store-type=jdbc
#spring.quartz.jdbc.initialize-schema=always
#spring.quartz.scheduler-name=QuartzScheduler




